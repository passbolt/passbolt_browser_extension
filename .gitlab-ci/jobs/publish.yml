publish-chrome:
  stage: publish
  rules:
    - if: "$CI_COMMIT_TAG"
      when: manual
  script:
    - |
      apt-get update && apt-get install -y curl
      bash .gitlab-ci/scripts/bin/publish.sh chrome
      echo "Sending slack build notification"
      echo "================================"
      bash ./.gitlab-ci/scripts/bin/slack-status-messages.sh ":rocket: passbolt-chrome-extension $CI_COMMIT_TAG has been published!" "$CI_PROJECT_URL/-/jobs/$CI_JOB_ID"

publish-firefox:
  stage: publish
  rules:
    - if: "$CI_COMMIT_TAG"
      when: manual
  script:
    - |
      apt-get update && apt-get install -y curl
      bash .gitlab-ci/scripts/bin/publish.sh firefox
      echo "Sending slack build notification"
      echo "================================"
      bash ./.gitlab-ci/scripts/bin/slack-status-messages.sh ":rocket: passbolt-firefox-extension $CI_COMMIT_TAG has been published!" "$CI_PROJECT_URL/-/jobs/$CI_JOB_ID"

publish-edge:
  stage: publish
  rules:
    - if: "$CI_COMMIT_TAG"
      when: manual
  script:
    - |
      apt-get update && apt-get install -y curl
      bash .gitlab-ci/scripts/bin/publish.sh edge
      echo "Sending slack build notification"
      echo "================================"
      bash ./.gitlab-ci/scripts/bin/slack-status-messages.sh ":rocket: passbolt-edge-extension $CI_COMMIT_TAG has been published!" "$CI_PROJECT_URL/-/jobs/$CI_JOB_ID"

publish-to-npmjs:
  stage: publish
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/node:18
  rules:
    - if: "$CI_COMMIT_TAG"
  script:
    - |
      bash .gitlab-ci/scripts/bin/publish_npm.sh
      bash ./.gitlab-ci/scripts/bin/slack-status-messages.sh ":rocket: passbolt-browser-extension $CI_COMMIT_TAG has been published in https://www.npmjs.com/package/passbolt-browser-extension" "$CI_PROJECT_URL/-/jobs/$CI_JOB_ID"